@use "../settings/mixins" as *;
@use "../settings/variables" as *;
@use "sass:color";

.sec-apply {
  .contactTxt {
    text-align: center;
  }
  .btnContainer {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 5rem;
  }
}

.contactTable {
  width: 100%;
  margin-top: 5rem;
  input,
  button,
  textarea,
  select {
    // デフォルトスタイルをリセット
    font-family: inherit;
    color: inherit;
    border: none;
    border-radius: 0;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }
  input[type=text],
  input[type=tel],
  input[type=email],
  textarea {
    width: 100%;
    padding: .5em;
    background: #f3f3f3;
  }
  @supports(-webkit-appearance: none) or (-moz-appearance: none) {
    input[type='checkbox'],
    input[type='radio'] {
      --active: #{$color01};
      --active-inner: #fff;
      --focus: 2px #{$color01}aa;
      --border: #c5c5c5;
      --border-hover: #{$color01};
      --background: #fff;
      --disabled: #e7e7e7;
      --disabled-inner: #{$color01};
      position: relative;
      display: inline-block;
      width: 18px;
      min-width: 18px;
      height: 18px;
      margin: 0;
      cursor: pointer;
      transition: background .3s, border-color .3s, box-shadow .2s;
      border: 1px solid var(--bc, var(--border));
      outline: none;
      background: var(--b, var(--background));
      -webkit-appearance: none;
      -moz-appearance: none;
      &:after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        display: block;
        transition: transform var(--d-t, .3s) var(--d-t-e, ease), opacity var(--d-o, .2s);
      }
      &:checked {
        --b: var(--active);
        --bc: var(--active);
        --d-o: .3s;
        --d-t: .6s;
        --d-t-e: cubic-bezier(.2, .85, .32, 1.2);
      }
      &:disabled {
        --b: var(--disabled);
        cursor: not-allowed;
        opacity: .9;
        &:checked {
          --b: var(--disabled-inner);
          --bc: var(--border);
        }
        & + label {
          cursor: not-allowed;
        }
      }
      &:hover {
        &:not(:checked) {
          &:not(:disabled) {
            --bc: var(--border-hover);
          }
        }
      }
      &:focus {
        box-shadow: 0 0 0 var(--focus);
      }
      &:not(.switch) {
        &:after {
          opacity: var(--o, 0);
        }
        &:checked {
          --o: 1;
          + label {
            color: $colorText;
          }
        }
      }
      & + label {
        margin-left: .5em;
        cursor: pointer;
      }
    }
    input[type='checkbox'] {
      &:not(.switch) {
        border-radius: 4px;
        &:after {
          top: 3px;
          left: 5px;
          width: 6px;
          height: 9px;
          transform: rotate(var(--r, 20deg));
          border: 2px solid var(--active-inner);
          border-top: 0;
          border-left: 0;
        }
        &:checked {
          --r: 43deg;
        }
      }
    }
    input[type='radio'] {
      border-radius: 50%;
      &:after {
        width: 16px;
        height: 16px;
        transform: scale(var(--s, .7));
        opacity: 0;
        border-radius: 50%;
        background: var(--active-inner);
      }
      &:checked {
        --s: .5;
      }
    }
  }
  tr {
    display: flex;
    padding: 1.5rem 0;
  }
  th {
    width: 160px;
    padding: .5em 1em;
    text-align: left;
    flex-shrink: 0 ;
  }
  td {
    padding-right: 1em;
    flex-grow: 1;
  }
  &_radioRow {
    display: flex;
    align-items: center;
    + .contactTable_radioRow {
      margin-top: .2em;
    }
  }
  &_required {
    th {
      display: flex;
      align-items: baseline;
      &::after {
        content: "必須";
        margin-left: .7em;
        padding: 0.05em 0.15em;
        font-size: 10px;
        color: #fff;
        border-radius: 2px;
        background: adjust-hue($color01, 150deg);
      }
    }
  }
}

// 確認画面
.mw_wp_form_confirm .contactTable {
  td {
    width: 100%;
    padding: .5em;
    background: #f3f3f3;
  }
}
